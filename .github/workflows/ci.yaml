name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - 3.7
          - 3.8
          - 3.9
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Java (Spark)
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Install Spark
        uses: vemonet/setup-spark@v1
        with:
          spark-version: '3.1.2'
          hadoop-version: '3.2'
      - name: Setup Node (for PyRight)
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install Poetry (Latest Version)
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
      - name: Add Poetry to PATH env var
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Install Python Requirements
        run: poetry install
      - name: Run Linter
        run: poetry run flake8 src/
      - name: Run Type Checks
        run: |
          npm install -g pyright
          pyright
      - name: Run Tests
        run: poetry run pytest tests/
      - name: Build Wheel
        run: poetry build
      - name: Run all
        run: poetry shell make
      - name: Upload Wheel to GitHub Artifact
        uses: actions/upload-artifact@v2
        with:
          path: dist/
      - name: Upload Output Files to GitHub Artifact
        uses: actions/upload-artifact@v2
        with:
          path: out/
